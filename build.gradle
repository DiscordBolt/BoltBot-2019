buildscript {
    ext {
        boltBotVersion = "3.0-SNAPSHOT"

        springBootVersion = "2.0.3.RELEASE"
        discord4jVersion = "v3-SNAPSHOT"
        storeVersion = "master-SNAPSHOT"
        commandVersion = "2.0"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'com.google.cloud.tools.jib' version '0.9.7'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.discordbolt'
version "$boltBotVersion"

sourceCompatibility = 10
targetCompatibility = 10

bootJar {
    baseName = 'boltbot'
    version = "$boltBotVersion"
}

repositories {
    mavenCentral()
    maven {
        // Discord 4J & Command API
        url "https://jitpack.io"
    }
    maven {
        // Spring Data
        url "https://repository.jboss.org/nexus/content/repositories/releases"
    }
}

dependencies {
    // Spring Boot
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "$springBootVersion"
    // Spring Data
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: "$springBootVersion"
    implementation group: 'mysql', name: 'mysql-connector-java'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.11'
    // Discord4J
    implementation group: 'com.discord4j.discord4j', name: 'discord4j-core', version: "$discord4jVersion"
    implementation group: 'com.github.discord4j.stores', name: 'stores-jdk', version: "$storeVersion"
    // Command API
    implementation group: 'com.github.DiscordBolt', name: 'CommandAPI', version: "$commandVersion"
    // Reflections (For BotModules)
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.11'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "$springBootVersion"
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.18.3'
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.197'
}

task defineProperties(dependsOn: processResources) {
    doLast {
        file("$buildDir/resources/main/application.properties").withWriter { w ->
            Properties p = new Properties()
            p.load(new FileInputStream(new File('src/main/resources/application.properties')))
            p['boltbot.version'] = project.version.toString()
            p['discord.token'] = project.findProperty("DiscordToken")
            p.store w, null
        }
    }
}

def getCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

classes {
    dependsOn defineProperties
}

jib {
    from {
        image = 'openjdk:10-jre'
    }
    to {
        image = "techtony96/boltbot:$boltBotVersion-" + getCommitHash()
        auth {
            username = 'techtony96'
            password = project.findProperty("DockerPassword")
        }
    }
    container {
        jvmFlags = ['-Xms512m', '-Xmx512m']
        mainClass = 'com.discordbolt.boltbot.BoltBot'
    }
}
